
namespace = mem_freighter_stasis



#Freighter in Stasis
#Writing and Idea by Maria
#Code by LamilLerran

# Start event
planet_event = {
	id = mem_freighter_stasis.1
	hide_window = yes
	
	mean_time_to_happen = {
		months = 2400
	}
	
	trigger = {
		years_passed > 40
		NOT = { has_global_flag = mem_freighter_stasis_started }
		has_owner = yes
		owner = { is_ai = no }
		
		#No one but the planet owner may have high intel level of system; this means that,
		#at least initially, only one player will find the ship.
		solar_system = { NOT = { any_country = {
			intel_level = {
				level = high
				system = prev
			}
			NOT = { is_same_value = root.owner }
		} } }
	}
	
	immediate = {
		set_global_flag = mem_freighter_stasis_started
		solar_system = {
			random_system_planet = {
				limit = { is_star = yes }
				save_event_target_as = mem_freighter_stasis_star
				set_star_flag = mem_freighter_stasis_arrival_star
			}
		}
		create_country = {
			name = mem_freighter_stasis_faction.name	#TODO: Does this work?
			type = faction
		}
		last_created_country = {
			create_fleet = { name = mem_freighter_stasis_fleet.name } #TODO: Does this work?
			set_country_flag = mem_freighter_stasis_refugee_country
			last_created_fleet = {
				set_owner = PREV
				set_fleet_flag = mem_freighter_stasis_refugee_fleet
				create_ship = {
					name = mem_freighter_stasis_refugee_ship.name	#TODO: Does this work?
					design = "MEM-Freighter-Stasis-Freighter"	
				}
				last_created_ship = {
					save_event_target_as = mem_freighter_stasis_ship
				}
				set_location = {
					target = event_target:mem_freighter_stasis_star
					distance = 250 #TODO: Calibrate -- note that systems seem to vary in size
					angle = random
				}
				set_fleet_stance = passive
				queue_actions = {
					move_to = event_target:mem_freighter_stasis_star
					effect = {
						id = "mem_freighter_stasis.2.effect.1"
						#TODO: Event on destruction through inaction?
						root.owner = { country_event = { mem_freighter_stasis.10 } }
						destroy_fleet = this
					}
				}
			}
			set_faction_hostility = { set_hostile = no }
			establish_communications_no_message = root.owner	#This may not be working correctly?
		}
		
		owner = { country_event = { id = mem_freighter_stasis.2 } }
	}
}

# Observing empire's first seen event
country_event = {
	id = mem_freighter_stasis.2
	title = "mem_freighter_stasis.2.name"
	desc = "mem_freighter_stasis.2.desc"
	picture = TODO
	is_triggered_only = yes
	
	trigger = {
		NOT = { has_country_flag = mem_freighter_stasis_observed }
	}
	
	immediate = {
		set_country_flag = mem_freighter_stasis_observed
		event_target:mem_freighter_stasis_ship = {
			enable_special_project = {	#TODO: Make sure this tracks ship correctly
				name = "MEM_INVESTIGATE_FREIGHTER_STASIS"
				location = this
				owner = root
			}
		}
	}
	
	option = {
		name = "mem_freighter_stasis.2.a"
	}
}

# Another Empire sees the ship for the first time
# As per on_action comments:
# From = System
fleet_event = {
	id = mem_freighter_stasis.3
	title = "mem_freighter_stasis.3.name"
	desc = "mem_freighter_stasis.3.desc"
	picture = TODO
	is_triggered_only = yes
	
	trigger = {
		has_global_flag = mem_freighter_stasis_started
		from = { has_star_flag = mem_freighter_stasis_arrival_star }
		owner = { NOT = { has_country_flag = mem_freighter_stasis_observed } }
	}
	
	immediate = {
		#TODO: This mimics the approach of 2. Make sure that works and these work together.
		owner = { set_country_flag = mem_freighter_stasis_observed }
		event_target:mem_freighter_stasis_ship = {
			enable_special_project = {	#TODO: Make sure this tracks ship correctly
				name = "MEM_INVESTIGATE_FREIGHTER_STASIS"
				location = this
				owner = root
			}
		}
	}
	
	#TODO: Multiple options?
	option = {
		name = "mem_freighter_stasis.3.a"
	}
}

#Project Success!
ship_event = {
	id = mem_freighter_stasis.9
	title = "mem_freighter_stasis.9.name"
	desc = "mem_freighter_stasis.9.desc"
	picture = TODO
	is_triggered_only = yes
	
	immediate = {
		#TODO: Cleanup, more?
	}
	
	option = {
		name = "mem_freighter_stasis.9.a"
		#TODO: Anything beyond the message?
	}
}


#Ship plummets into star before anyone examines
country_event = {
	id = mem_freighter_stasis.10
	title = "mem_freighter_stasis.10.name"
	desc = "mem_freighter_stasis.10.desc"
	picture = TODO
	is_triggered_only = yes
	
	immediate = {
		#TODO: Cleanup
	}
	
	option = {
		name = "mem_freighter_stasis.10.a"
		#TODO: Anything beyond the message?
	}
}
